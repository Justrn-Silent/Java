关于对象创建时候内存分布于与栈区，堆区，栈帧的关系和流程
--------------------------------------------------
public class java {
	int old;
	String name;
	text_2 a;
		void text (){
			System.out.println(“123”+a.cput);
		}
	Public static void main (String[]args){
			Java s = new java();
				s.old=18;
			s.name=”Justrn”;
		text_2 s1 = new text_2();
			s1.cput="456";
			s.a=s1;
			s.text();
		}
	}
		class text_2{
			String cput;
		}
-------------------------------------------------
首先根据常规操作这些类都将先被JVM初始化，这在只单纯初始化字符串常量，其他都是非静态成员即属于实例
然后调用mian方法，即在堆区压入main方法栈帧，并初始化字符串args
紧接着创建实例，在main方法创建java类型名为s的指针变量，同时会在堆区开辟空间储存实例成员，并将堆区空间地址传递给s
然后会在栈区创建Java()栈帧，但是由于Java()方法没有代码，属于创建后立马销毁
利用指针变量s指向变量old并赋值，紧接着也指向字符串name并在方法区调用字符串常量进行赋值
同理，又创建创建实例，在main方法创建text_2类型名为s1的指针变量，同时会在堆区开辟空间储存实例成员，并将堆区空间地址传递给s1
然后会在栈区创建text_2()栈帧，但是由于text_2()方法没有代码，属于创建后立马销毁
利用指针变量s1指向变量cput并在方法区调用字符串常量进行赋值，紧接着指针变量s引用text_2类型名为a的指针变量同时赋值为s1
然后调用text()方法，同时在栈区创建text()栈帧，运行输出代码后结束销毁text()
最后程序执行完毕销毁main栈帧