首先：：Java运行流程：先javac 类名.Java -->> java 类名  --->> 也就是说先加载类再main方法
-------------------------------------------------------------------------------------------------------------------------------------------------
1.	**栈区（Stack）**：
- 栈区是每个线程私有的，用于存储线程执行过程中的局部变量表、操作数栈、方法返回地址等信息。
- 局部变量表：存储方法的局部变量（变量名、类型、值）。
- 操作数栈：用于执行算术运算或调用方法时的临时存储。
- 方法返回地址：方法执行完毕后返回到调用点。
- 每个方法被调用都会创建一个栈帧(存储局部变量、操作数、方法出口等)
2. **堆区（Heap）**：
- 堆是所有线程共享的区域，是Java对象的主要存储区域。
- 存储几乎所有的Java对象实例和数组的内存分配。
3. **方法区（静态区）（Method Area）**：
- 方法区是用于存储已被虚拟机加载的类信息(class类)、常量、静态变量等数据。
- 类信息：包括类的字节码、字段、方法、接口等。
- 常量池：存储字面量常量和符号引用。
- 静态变量：类的静态成员变量（被static修饰的变量）。
- 运行时常量池：方法区的常量池的一部分，存储运行时常量。
-------------------------------------------------------------------------------------------------------------------------------------------------
public class java {
	int old;
	String name;
	text_2 a;
		void text (){
			System.out.println(“123”+a.cput);
		}
	Public static void main (String[]args){
			Java s = new java();
				s.old=18;
			s.name=”Justrn”;
		text_2 s1 = new text_2();
			s1.cput="456";
			s.a=s1;
			s.text();
		}
	}
		class text_2{
			String cput;
		}
-------------------------------------------------
栈区：
栈帧3：
	text_2()方法{
	//默认创建构造函数
		NULL
	}
栈帧2：
	Java()方法{
		//默认创建构造函数
		NULL
	}
栈帧1：
main{
	Java s=0X012AE(null);
	text_2 s1=0X012EG(null);
	}
-------------------------------------------------
堆区：

	new text_2(){地址：0X012EG
	String cput="456";
	}
	
	new java(){地址：0X012AE
		int old=18;
	String name="Justrn";
	text_2 a=0X012EG;									
	void text ();									
													
	}												
-------------------------------------------------		
方法区：											
	代码											
	静态变量										
	静态字段										
	字符串常量										
	Justrn  
	456
-------------------------------------------------


this 仅限于堆区：this 只能直接访问堆区中的实例变量和实例方法，不能直接访问方法区中的静态字段。
